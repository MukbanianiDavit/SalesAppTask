// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesApp.Infrastructure.Data;

namespace SalesApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SalesAppDbContext))]
    [Migration("20211122175702_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("client_id");

                    b.Property<string>("ClientFname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("client_fname");

                    b.Property<string>("ClientLname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("client_lname");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<double>("OrderAmount")
                        .HasColumnType("float")
                        .HasColumnName("order_ammount");

                    b.Property<Guid>("OrderClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_client_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<Guid?>("OrderParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_parent_id");

                    b.Property<Guid>("OrderSellerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_seller_id");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderClientId");

                    b.HasIndex("OrderSellerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Seller", b =>
                {
                    b.Property<Guid>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seller_id");

                    b.Property<Guid?>("SellerBossId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("seller_boss_id");

                    b.Property<string>("SellerFname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("seller_fname");

                    b.Property<string>("SellerLname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("seller_lname");

                    b.HasKey("SellerId");

                    b.HasIndex("SellerBossId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Order", b =>
                {
                    b.HasOne("SalesApp.Infrastructure.Data.Entities.Client", "OrderClient")
                        .WithMany("Orders")
                        .HasForeignKey("OrderClientId")
                        .HasConstraintName("FK__Orders__order_cl__4222D4EF")
                        .IsRequired();

                    b.HasOne("SalesApp.Infrastructure.Data.Entities.Seller", "OrderSeller")
                        .WithMany("Orders")
                        .HasForeignKey("OrderSellerId")
                        .HasConstraintName("FK__Orders__order_se__4316F928")
                        .IsRequired();

                    b.Navigation("OrderClient");

                    b.Navigation("OrderSeller");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Seller", b =>
                {
                    b.HasOne("SalesApp.Infrastructure.Data.Entities.Seller", "SellerBoss")
                        .WithMany("InverseSellerBoss")
                        .HasForeignKey("SellerBossId")
                        .HasConstraintName("FK__Sellers__seller___3F466844");

                    b.Navigation("SellerBoss");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SalesApp.Infrastructure.Data.Entities.Seller", b =>
                {
                    b.Navigation("InverseSellerBoss");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
